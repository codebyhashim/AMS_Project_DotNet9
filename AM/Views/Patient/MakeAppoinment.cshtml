@using AM.ApplicationCore.Models
@model AM.Models.AppointmentModel

@* @{ *@
@*     ViewData["Title"] = "MakeAppoinment"; *@
@* } *@


<style>
	/* Style for booked slots */
	.booked-slot {
		color: green; /* Green color for booked slots */
	}


</style>

<div class="row  ">

	<div class="col-md-4 m-auto card shadow   " style="border-radius:10px">
		<form asp-action="MakeAppoinment" asp-controller="Patient" method="post" class="card-body ">
			<h4 class="text-center">Book Appoimdent</h4>
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group" hidden>
				<label asp-for="AppointmentId" class="control-label"></label>
				<input asp-for="AppointmentId" class="form-control" />
			</div>
			<div class="form-group" hidden>
				<label asp-for="PatientId" class="control-label" hidden></label>
				<input asp-for="PatientId" class="form-control" />
			</div>
			<div class="form-group">
				<label asp-for="@Model.Patient">Patient Name</label>
				<!-- Pre-fill patient's name from the model -->
				<input asp-for="@Model.Patient" type="text" id="PatientName" class="form-control" value="@Model.Patient.Name" readonly />
			</div>


			<div class="form-group">
				<label asp-for="DoctorId">Select Doctor</label>
				<select asp-for="DoctorId" onchange="updateTimeSlot()" class="form-control" id="DoctorId" name="DoctorId">
					<option value="0" disabled>select Doctor</option>


					@foreach (var doctor in ViewBag.Doctors as List<DoctorModel>)
					{
						<option value="@doctor.Id">@doctor.Name ( @doctor.Speciality)</option>
					}




				</select>
				<span asp-validation-for="DoctorId" class="text-danger"></span>

			</div>


		@* 	<div class="form-group">
				<label asp-for="AppointmentDate" class="control-label"></label>
				<input asp-for="AppointmentDate" id="AppointmentDate"  type="date" value="@ViewBag.CurrentDate" min="@ViewBag.CurrentDate" class="form-control" />
				<span asp-validation-for="AppointmentDate" class="text-danger"></span>
			</div> *@


			<div class="form-group">
				<label asp-for="AppointmentDate" class="control-label"></label>
				<input onchange="updateTimeSlot()" asp-for="AppointmentDate" id="AppointmentDate" type="text" value="@ViewBag.CurrentDate" min="@ViewBag.CurrentDate" class="form-control" />
				<span asp-validation-for="AppointmentDate" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label>Select Time Slot</label>
				<select asp-for="BookedSlots" name="BookedSlots" class="form-control" id="SlotId">
					@* <option value="" disabled selected>Select Time Slot</option> *@
				</select>
				<span id="slotErrorMessage" class="text-danger"></span>
			</div>

			@*  <div class="form-group">
                <label >Select slot</label>
                <select  class="form-control" id="" name="">



                    @foreach (var doctor in ViewBag.timeSlot as List<TimeSlotsModel>)
                    {
                        <option value="@doctor.Id">@doctor.StartTime.ToString("hh:mm tt") - @doctor.EndTime.ToString("hh:mm tt")</option>
					}





					}


				</select>
				<span asp-validation-for="DoctorId" class="text-danger"></span>

			</div>
 *@




			<div class="form-group" hidden>
				<label asp-for="DoctorId" class="control-label"></label>
				<select asp-for="DoctorId" class="form-control" asp-items="ViewBag.DoctorId"></select>
			</div>
			<div class="form-group d-flex justify-content-center">
				<input type="submit" value="Get Appoinment" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.11/dist/jquery.validate.unobtrusive.min.js"></script>



@* <div>
    <a asp-action="Index">Back to List</a>
</div> *@

@* <script type="text/javascript">

       function updateTimeSlot() {
        var doctorId = $('#DoctorId').val();  // Get the selected doctor ID
        var AppointmentDate = $('#AppointmentDate').val();  // Get the selected date of user

        var date =$('')
        if (doctorId) {
            // Make an AJAX request to get the available slots for the selected doctor
            $.ajax({
                url: '@Url.Action("SelectedSlots", "Patient")', // Controller action URL
                type: 'GET',
                data: { doctorId: doctorId, date:AppointmentDate }, // Pass the selected doctor ID as a parameter
                success: function (data) {
					debugger
                       $('#slotErrorMessage').text('');

                    if (data.message){
                        $('#slotErrorMessage').text(data.message);
                        $('#SlotId').empty().prop('disabled', true);
                    }else{


						 $('#SlotId').empty();
					$('#SlotId').append('<option value="0" disabled selected>Select Time Slot</option>');

					// Loop through the received slots and append them to the Slot dropdown
					$.each(data, function (index, slot) {
						console.log("index is " + index + " " + "slot is: " + slot.text);
						// Corrected log statement
						// console.log(slot.Value);

						$('#SlotId').append('<option value="' + slot.value + '">' + slot.text + '</option>');
					});

					}

                    // Clear the Slot dropdown before appending new options
                },
                error: function (xhr, status, error) {
                    // $('#slotErrorMessage').text('An error occurred while fetching available slots.');
                    alert("An error occurred while fetching available slots.");
                }
            });
        } else {
            // Clear the Slot dropdown if no doctor is selected
            $('#SlotId').empty();
            $('#SlotId').append('<option value="0" disabled selected>Select Time Slot</option>');
        }
    }





</script> 
 *@



<script type="text/javascript">

		 function updateTimeSlot() {
		var doctorId = $('#DoctorId').val(); // Get the selected doctor ID

		// Call updateTimeSlot and getAvailableDate functions after selecting the doctor
		updateSlot(doctorId);
		getAvailableDate(doctorId);
	}

				  function updateSlot() {
		var doctorId = $('#DoctorId').val();  // Get the selected doctor ID
		var appointmentDate = $('#AppointmentDate').val();  // Get the selected date of user

		// Only proceed if a doctor is selected
		if (doctorId) {
			// Make an AJAX request to get the available slots for the selected doctor and date
			$.ajax({
				url: '@Url.Action("SelectedSlots", "Patient")', // Controller action URL
				type: 'GET',
				data: { doctorId: doctorId, date: appointmentDate }, // Pass the selected doctor ID and date as parameters
				success: function (data) {
					debugger
					// Clear previous error message
					$('#slotErrorMessage').text('');




					// **Key Change:** Check if the response contains a message
					// if (data.message) {
					// 	If a message is returned (like "Doctor is not available on this day.")
					// 	$('#slotErrorMessage').text(data.message); Display the error message
					// 	$('#SlotId').empty().prop('disabled', true); Disable the slot dropdown
					// } else 
					// {
						// If slots are available, populate the dropdown
						var slotDropdown = $('#SlotId');
						slotDropdown.empty().prop('disabled', false); // Enable the dropdown

						// Add a default "Select Time Slot" option
						slotDropdown.append('<option value="0" disabled selected>Select Time Slot</option>');

						// Populate the dropdown with available slots
						$.each(data, function (index, slot) {

							// slotDropdown.append('<option value="' + slot.value + '">' + slot.text + '</option>');
						var option = $('<option>')
								.val(slot.value)
								.text(slot.text)
								.prop('disabled', slot.selected); // Disable the option if booked
							   if (slot.selected) {
								option.text(option.text() + ' Booked').addClass('booked-slot');;
							}
							// Add the option to the dropdown
							slotDropdown.append(option);
						});
					// }
				},
				error: function (xhr, status, error) {
					// **Key Change:** Error handling for AJAX request
					$('#slotErrorMessage').text('An error occurred while fetching available slots.');
				}
			});
		} else {
			// If no doctor is selected, clear the slot dropdown and disable it
			$('#SlotId').empty().prop('disabled', true);
		}
	}


	function getAvailableDate(doctorId) {
		// Fetch availability days from API
		$.ajax({
			url: '@Url.Action("GetDays", "Patient")',  // Your API endpoint
			type: 'GET',
			data: { doctorId: doctorId },
			success: function (response) {
				debugger
				// Assuming response is an array of day names like ["Monday", "Tuesday"]
				var availableDays = response; // Example: ["Monday", "Tuesday"]

				// Map the available days to their respective day indexes (0 = Sunday, 1 = Monday, ..., 6 = Saturday)
				var dayIndexes = availableDays.map(function(day) {
					switch(day.trim().toLowerCase()) {
						case 'monday': return 1;
						case 'tuesday': return 2;
						case 'wednesday': return 3;
						case 'thursday': return 4;
						case 'friday': return 5;
						case 'saturday': return 6;
						case 'sunday': return 0;
						default: return -1; // Invalid day
					}
				});

				// Initialize Flatpickr on the input field
				flatpickr("#AppointmentDate", {
					disable: [
						function(date) {
							// Disable all days except available days
							return !dayIndexes.includes(date.getDay());
						}
					],
					minDate: "today", // Restrict selection to today and future dates
					dateFormat: "Y-m-d", // Set the date format to match your backend
					// defaultDate: "@ViewBag.CurrentDate", Set the default date (optional)
					onReady: function(selectedDates, dateStr, instance) {
						// Optional: Custom logic when the datepicker is ready
					},
					onChange: function(selectedDates, dateStr, instance) {
						// Optional: Custom logic when the date is changed
					}
				});
			},
			error: function (xhr, status, error) {
				console.log('Error fetching available days:', error);
			}
		});
	}

	




	// 	function getAvailableDate(doctorId) {
	// 	// Fetch availability days from API
	// 	$.ajax({
	// 		url: '@Url.Action("GetDays", "Patient")',  // Your API endpoint
	// 		type: 'GET',
	// 		data: { doctorId: doctorId },
	// 		success: function (response) {
	// 			// Assuming response is an array of day names like ["Monday", "Tuesday"]
	// 			var availableDays = response; // Example: ["Monday", "Tuesday"]

	// 			// Map the available days to their respective day indexes (0 = Sunday, 1 = Monday, ..., 6 = Saturday)
	// 			var dayIndexes = availableDays.map(function(day) {
	// 				switch(day.trim().toLowerCase()) {
	// 					case 'monday': return 1;
	// 					case 'tuesday': return 2;
	// 					case 'wednesday': return 3;
	// 					case 'thursday': return 4;
	// 					case 'friday': return 5;
	// 					case 'saturday': return 6;
	// 					case 'sunday': return 0;
	// 					default: return -1; // Invalid day
	// 				}
	// 			});

	// 			// Set min and max date based on available days
	// 			var today = new Date();
	// 			var currentDate = today.toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format
	// 			$("#AppointmentDate").attr("min", currentDate); // Set today's date as the minimum allowed date

	// 			// Function to check if a day is available
	// 			function isAvailableDay(date) {
	// 				var selectedDay = date.getDay(); // Get the day of the week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)
	// 				return dayIndexes.includes(selectedDay); // Return true if the day is available
	// 			}

	// 			// Bind the input's change event
	// 			$("#AppointmentDate").on('change', function() {
	// 				var selectedDate = new Date($(this).val());

	// 				// If the selected day is not available, clear the value
	// 				if (!isAvailableDay(selectedDate)) {
	// 					$(this).val(''); // Clear the selected date
	// 				}
	// 			});
	// 		},
	// 		error: function (xhr, status, error) {
	// 			console.log('Error fetching available days:', error);
	// 		}
	// 	});
	// }













</script>

@* <script>

	function getAvailableDate(){
			$(document).ready(function () {
			 // Set the doctor ID dynamically
			var doctorId = $('#DoctorId').val();

			// Fetch availability days from API
			$.ajax({
				url: '@Url.Action("GetDays", "Patient")',  // Your API endpoint
				type: 'GET',
				data: { doctorId: doctorId },
				dataType: 'json',
				success: function (response) {
					debugger
					availableDays = response; // Expecting an array like [1, 3, 5] (Mon, Wed, Fri)
					$("#AppointmentDate").datepicker("refresh");
				}
			});

			// Initialize Datepicker
			$("#AppointmentDate").datepicker({
				beforeShowDay: function (date) {
					var day = date.getDay(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
					return [availableDays.includes(day)]; // Enable only available days
				}
			});
		});


		}
</script> *@
